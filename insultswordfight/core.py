# AUTOGENERATED! DO NOT EDIT! File to edit: notebooks/00_zingers_GPT-J.ipynb (unless otherwise specified).

__all__ = ['get_insult_data', 'create_input_string', 'generate_comeback']

# Cell
import os
import pandas as pd

# Cell
import os

def get_insult_data():
    """
    Scrape insult/comeback data from Monkey Island fandom wiki
    """
    dpath = 'data/insults.csv'
    if os.path.exists(dpath):
        pirate = pd.read_csv(dpath, index_col=0)
    else:
        tb = pd.read_html("https://monkeyisland.fandom.com/wiki/Insult_Sword_Fighting")
        pirate, master = tb[0], tb[1]
        pirate.to_csv(dpath)
    return pirate


# Cell

def create_input_string(insult, df, training_examples=5, intro=False):
    """
    Loops through insult database and creates few-shot learning string
        Skips over input insult/comeback in database
    """
    if intro: s = "The following is an insult battle between two pirates. \n###\n"
    else: s = ""

    for i in range(training_examples):
        if df.Insult[i] == insult: # add example from end of pack
            i = training_examples + 1
        s += f"""Insult: {df.Insult[i]}\nComeback: {df.Comeback[i]}\n###\n"""

    return f"{s}Insult: {insult}\nComeback:"


# Cell

def generate_comeback(insult, client, df, outputs, training_examples=3):
    """
    Creates input string and sends to nlpcloud for few-shot learning
    """
    print(f'Insult: ☠️ {insult} ☠️\n')
    t = create_input_string(insult, df, training_examples)
    zingers = []
    for i in range(outputs):
        generation = client.generation(t,
            max_length=100,
            length_no_input=True,
            end_sequence="\n###",
            remove_input=True)
        comeback = generation["generated_text"].strip('\n')
        print(f"Comeback: ({i}) {comeback} 🔥🔥🔥\n")
        zingers.append(comeback)
    return zingers
